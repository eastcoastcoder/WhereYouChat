{"version":3,"sources":["resources/leaflet.draw/draw/handler/Draw.Polygon.js"],"names":["L","Draw","Polygon","Polyline","extend","statics","TYPE","Poly","options","showArea","showLength","shapeOptions","stroke","color","weight","opacity","fill","fillColor","fillOpacity","clickable","metric","feet","nautic","precision","initialize","map","prototype","call","type","_updateFinishHandler","markerCount","_markers","length","on","_finishShape","off","_getTooltipText","text","subtext","drawLocal","draw","handlers","polygon","tooltip","start","cont","_getMeasurementString","end","area","_area","measurementString","GeometryUtil","readableArea","_shapeIsValid","_vertexChanged","latlng","added","latLngs","allowIntersection","_poly","getLatLngs","geodesicArea","_cleanUpShape"],"mappings":";AAKAA,EAAEC,KAAKC,QAAUF,EAAEC,KAAKE,SAASC,OAAO,CACvCC,QAAS,CACRC,KAAM,WAGPC,KAAMP,EAAEE,QAERM,QAAS,CACRC,UAAU,EACVC,YAAY,EACZC,aAAc,CACbC,QAAQ,EACRC,MAAO,UACPC,OAAQ,EACRC,QAAS,GACTC,MAAM,EACNC,UAAW,KACXC,YAAa,GACbC,WAAW,GAKZC,QAAQ,EACRC,MAAM,EACNC,QAAQ,EAERC,UAAW,IAIZC,WAAY,SAAUC,EAAKjB,GAC1BR,EAAEC,KAAKE,SAASuB,UAAUF,WAAWG,KAAK,KAAMF,EAAKjB,GAGhDoB,KAAAA,KAAO5B,EAAEC,KAAKC,QAAQI,MAG5BuB,qBAAsB,WACjBC,IAAAA,EAAc,KAAKC,SAASC,OAGZ,IAAhBF,GACEC,KAAAA,SAAS,GAAGE,GAAG,QAAS,KAAKC,aAAc,MAI7CJ,EAAc,IACZC,KAAAA,SAASD,EAAc,GAAGG,GAAG,WAAY,KAAKC,aAAc,MAE7DJ,EAAc,GACZC,KAAAA,SAASD,EAAc,GAAGK,IAAI,WAAY,KAAKD,aAAc,QAKrEE,gBAAiB,WACZC,IAAAA,EAAMC,EAYH,OAVsB,IAAzB,KAAKP,SAASC,OACjBK,EAAOrC,EAAEuC,UAAUC,KAAKC,SAASC,QAAQC,QAAQC,MACvC,KAAKb,SAASC,OAAS,GACjCK,EAAOrC,EAAEuC,UAAUC,KAAKC,SAASC,QAAQC,QAAQE,KACjDP,EAAU,KAAKQ,0BAEfT,EAAOrC,EAAEuC,UAAUC,KAAKC,SAASC,QAAQC,QAAQI,IACjDT,EAAU,KAAKQ,yBAGT,CACNT,KAAMA,EACNC,QAASA,IAIXQ,sBAAuB,WAClBE,IAAAA,EAAO,KAAKC,MACfC,EAAoB,GAGjB,OAACF,GAAS,KAAKxC,QAAQE,YAIvB,KAAKF,QAAQE,aAChBwC,EAAoBlD,EAAEC,KAAKE,SAASuB,UAAUoB,sBAAsBnB,KAAK,OAGtEqB,IACHE,GAAqB,OAASlD,EAAEmD,aAAaC,aAAaJ,EAAM,KAAKxC,QAAQY,OAAQ,KAAKZ,QAAQe,YAG5F2B,GAXC,MAcTG,cAAe,WACP,OAAA,KAAKtB,SAASC,QAAU,GAGhCsB,eAAgB,SAAUC,EAAQC,GAC7BC,IAAAA,GAGC,KAAKjD,QAAQkD,mBAAqB,KAAKlD,QAAQC,WACnDgD,EAAU,KAAKE,MAAMC,aAEhBX,KAAAA,MAAQjD,EAAEmD,aAAaU,aAAaJ,IAG1CzD,EAAEC,KAAKE,SAASuB,UAAU4B,eAAe3B,KAAK,KAAM4B,EAAQC,IAG7DM,cAAe,WACVhC,IAAAA,EAAc,KAAKC,SAASC,OAE5BF,EAAc,IACZC,KAAAA,SAAS,GAAGI,IAAI,QAAS,KAAKD,aAAc,MAE7CJ,EAAc,GACZC,KAAAA,SAASD,EAAc,GAAGK,IAAI,WAAY,KAAKD,aAAc","file":"Draw.Polygon.0b176446.map","sourceRoot":"..","sourcesContent":["/**\n * @class L.Draw.Polygon\n * @aka Draw.Polygon\n * @inherits L.Draw.Polyline\n */\nL.Draw.Polygon = L.Draw.Polyline.extend({\n\tstatics: {\n\t\tTYPE: 'polygon'\n\t},\n\n\tPoly: L.Polygon,\n\n\toptions: {\n\t\tshowArea: false,\n\t\tshowLength: false,\n\t\tshapeOptions: {\n\t\t\tstroke: true,\n\t\t\tcolor: '#3388ff',\n\t\t\tweight: 4,\n\t\t\topacity: 0.5,\n\t\t\tfill: true,\n\t\t\tfillColor: null, //same as color by default\n\t\t\tfillOpacity: 0.2,\n\t\t\tclickable: true\n\t\t},\n\t\t// Whether to use the metric measurement system (truthy) or not (falsy).\n\t\t// Also defines the units to use for the metric system as an array of\n\t\t// strings (e.g. `['ha', 'm']`).\n\t\tmetric: true,\n\t\tfeet: true, // When not metric, to use feet instead of yards for display.\n\t\tnautic: false, // When not metric, not feet use nautic mile for display\n\t\t// Defines the precision for each type of unit (e.g. {km: 2, ft: 0}\n\t\tprecision: {}\n\t},\n\n\t// @method initialize(): void\n\tinitialize: function (map, options) {\n\t\tL.Draw.Polyline.prototype.initialize.call(this, map, options);\n\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\n\t\tthis.type = L.Draw.Polygon.TYPE;\n\t},\n\n\t_updateFinishHandler: function () {\n\t\tvar markerCount = this._markers.length;\n\n\t\t// The first marker should have a click handler to close the polygon\n\t\tif (markerCount === 1) {\n\t\t\tthis._markers[0].on('click', this._finishShape, this);\n\t\t}\n\n\t\t// Add and update the double click handler\n\t\tif (markerCount > 2) {\n\t\t\tthis._markers[markerCount - 1].on('dblclick', this._finishShape, this);\n\t\t\t// Only need to remove handler if has been added before\n\t\t\tif (markerCount > 3) {\n\t\t\t\tthis._markers[markerCount - 2].off('dblclick', this._finishShape, this);\n\t\t\t}\n\t\t}\n\t},\n\n\t_getTooltipText: function () {\n\t\tvar text, subtext;\n\n\t\tif (this._markers.length === 0) {\n\t\t\ttext = L.drawLocal.draw.handlers.polygon.tooltip.start;\n\t\t} else if (this._markers.length < 3) {\n\t\t\ttext = L.drawLocal.draw.handlers.polygon.tooltip.cont;\n\t\t\tsubtext = this._getMeasurementString();\n\t\t} else {\n\t\t\ttext = L.drawLocal.draw.handlers.polygon.tooltip.end;\n\t\t\tsubtext = this._getMeasurementString();\n\t\t}\n\n\t\treturn {\n\t\t\ttext: text,\n\t\t\tsubtext: subtext\n\t\t};\n\t},\n\n\t_getMeasurementString: function () {\n\t\tvar area = this._area,\n\t\t\tmeasurementString = '';\n\n\n\t\tif (!area && !this.options.showLength) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.options.showLength) {\n\t\t\tmeasurementString = L.Draw.Polyline.prototype._getMeasurementString.call(this);\n\t\t}\n\n\t\tif (area) {\n\t\t\tmeasurementString += '<br>' + L.GeometryUtil.readableArea(area, this.options.metric, this.options.precision);\n\t\t}\n\n\t\treturn measurementString;\n\t},\n\n\t_shapeIsValid: function () {\n\t\treturn this._markers.length >= 3;\n\t},\n\n\t_vertexChanged: function (latlng, added) {\n\t\tvar latLngs;\n\n\t\t// Check to see if we should show the area\n\t\tif (!this.options.allowIntersection && this.options.showArea) {\n\t\t\tlatLngs = this._poly.getLatLngs();\n\n\t\t\tthis._area = L.GeometryUtil.geodesicArea(latLngs);\n\t\t}\n\n\t\tL.Draw.Polyline.prototype._vertexChanged.call(this, latlng, added);\n\t},\n\n\t_cleanUpShape: function () {\n\t\tvar markerCount = this._markers.length;\n\n\t\tif (markerCount > 0) {\n\t\t\tthis._markers[0].off('click', this._finishShape, this);\n\n\t\t\tif (markerCount > 2) {\n\t\t\t\tthis._markers[markerCount - 1].off('dblclick', this._finishShape, this);\n\t\t\t}\n\t\t}\n\t}\n});\n"]}