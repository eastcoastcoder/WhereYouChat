{"version":3,"sources":["resources/leaflet.draw/ext/LatLngUtil.js"],"names":["L","LatLngUtil","cloneLatLngs","latlngs","clone","i","l","length","Array","isArray","push","cloneLatLng","latlng","latLng","lat","lng"],"mappings":";AAIAA,EAAEC,WAAa,CAKdC,aAAc,SAAUC,GAElB,IADDC,IAAAA,EAAQ,GACHC,EAAI,EAAGC,EAAIH,EAAQI,OAAQF,EAAIC,EAAGD,IAEtCG,MAAMC,QAAQN,EAAQE,IACzBD,EAAMM,KAAKV,EAAEC,WAAWC,aAAaC,EAAQE,KAE7CD,EAAMM,KAAK,KAAKC,YAAYR,EAAQE,KAG/BD,OAAAA,GAKRO,YAAa,SAAUC,GACfZ,OAAAA,EAAEa,OAAOD,EAAOE,IAAKF,EAAOG","file":"LatLngUtil.3d54025d.map","sourceRoot":"..","sourcesContent":["/**\n * @class L.LatLngUtil\n * @aka LatLngUtil\n */\nL.LatLngUtil = {\n\t// Clones a LatLngs[], returns [][]\n\n\t// @method cloneLatLngs(LatLngs[]): L.LatLngs[]\n\t// Clone the latLng point or points or nested points and return an array with those points\n\tcloneLatLngs: function (latlngs) {\n\t\tvar clone = [];\n\t\tfor (var i = 0, l = latlngs.length; i < l; i++) {\n\t\t\t// Check for nested array (Polyline/Polygon)\n\t\t\tif (Array.isArray(latlngs[i])) {\n\t\t\t\tclone.push(L.LatLngUtil.cloneLatLngs(latlngs[i]));\n\t\t\t} else {\n\t\t\t\tclone.push(this.cloneLatLng(latlngs[i]));\n\t\t\t}\n\t\t}\n\t\treturn clone;\n\t},\n\n\t// @method cloneLatLng(LatLng): L.LatLng\n\t// Clone the latLng and return a new LatLng object.\n\tcloneLatLng: function (latlng) {\n\t\treturn L.latLng(latlng.lat, latlng.lng);\n\t}\n};\n"]}