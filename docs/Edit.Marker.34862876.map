{"version":3,"sources":["resources/leaflet.draw/edit/handler/Edit.Marker.js"],"names":["L","Edit","Marker","Handler","extend","initialize","marker","options","_marker","setOptions","addHooks","dragging","enable","on","_onDragEnd","_toggleMarkerHighlight","removeHooks","disable","off","e","layer","target","edited","_map","fire","Draw","Event","EDITMOVE","icon","_icon","style","display","DomUtil","hasClass","removeClass","_offsetMarker","addClass","offset","iconMarginTop","parseInt","marginTop","iconMarginLeft","marginLeft","addInitHook","editing","editable"],"mappings":";AAAAA,EAAEC,KAAOD,EAAEC,MAAQ,GAMnBD,EAAEC,KAAKC,OAASF,EAAEG,QAAQC,OAAO,CAEhCC,WAAY,SAAUC,EAAQC,GACxBC,KAAAA,QAAUF,EACfN,EAAES,WAAW,KAAMF,IAKpBG,SAAU,WACLJ,IAAAA,EAAS,KAAKE,QAElBF,EAAOK,SAASC,SAChBN,EAAOO,GAAG,UAAW,KAAKC,WAAYR,GACjCS,KAAAA,0BAKNC,YAAa,WACRV,IAAAA,EAAS,KAAKE,QAElBF,EAAOK,SAASM,UAChBX,EAAOY,IAAI,UAAW,KAAKJ,WAAYR,GAClCS,KAAAA,0BAGND,WAAY,SAAUK,GACjBC,IAAAA,EAAQD,EAAEE,OACdD,EAAME,QAAS,EACVC,KAAAA,KAAKC,KAAKxB,EAAEyB,KAAKC,MAAMC,SAAU,CAACP,MAAOA,KAG/CL,uBAAwB,WACnBa,IAAAA,EAAO,KAAKpB,QAAQqB,MAKnBD,IAKLA,EAAKE,MAAMC,QAAU,OAEjB/B,EAAEgC,QAAQC,SAASL,EAAM,iCAC5B5B,EAAEgC,QAAQE,YAAYN,EAAM,gCAEvBO,KAAAA,cAAcP,GAAO,KAG1B5B,EAAEgC,QAAQI,SAASR,EAAM,gCAEpBO,KAAAA,cAAcP,EAAM,IAG1BA,EAAKE,MAAMC,QAAU,KAGtBI,cAAe,SAAUP,EAAMS,GAC1BC,IAAAA,EAAgBC,SAASX,EAAKE,MAAMU,UAAW,IAAMH,EACxDI,EAAiBF,SAASX,EAAKE,MAAMY,WAAY,IAAML,EAExDT,EAAKE,MAAMU,UAAYF,EAAgB,KACvCV,EAAKE,MAAMY,WAAaD,EAAiB,QAI3CzC,EAAEE,OAAOyC,YAAY,WAChB3C,EAAEC,KAAKC,SACL0C,KAAAA,QAAU,IAAI5C,EAAEC,KAAKC,OAAO,MAE7B,KAAKK,QAAQsC,UACXD,KAAAA,QAAQhC","file":"Edit.Marker.34862876.map","sourceRoot":"..","sourcesContent":["L.Edit = L.Edit || {};\n\n/**\n * @class L.Edit.Marker\n * @aka Edit.Marker\n */\nL.Edit.Marker = L.Handler.extend({\n\t// @method initialize(): void\n\tinitialize: function (marker, options) {\n\t\tthis._marker = marker;\n\t\tL.setOptions(this, options);\n\t},\n\n\t// @method addHooks(): void\n\t// Add listener hooks to this handler\n\taddHooks: function () {\n\t\tvar marker = this._marker;\n\n\t\tmarker.dragging.enable();\n\t\tmarker.on('dragend', this._onDragEnd, marker);\n\t\tthis._toggleMarkerHighlight();\n\t},\n\n\t// @method removeHooks(): void\n\t// Remove listener hooks from this handler\n\tremoveHooks: function () {\n\t\tvar marker = this._marker;\n\n\t\tmarker.dragging.disable();\n\t\tmarker.off('dragend', this._onDragEnd, marker);\n\t\tthis._toggleMarkerHighlight();\n\t},\n\n\t_onDragEnd: function (e) {\n\t\tvar layer = e.target;\n\t\tlayer.edited = true;\n\t\tthis._map.fire(L.Draw.Event.EDITMOVE, {layer: layer});\n\t},\n\n\t_toggleMarkerHighlight: function () {\n\t\tvar icon = this._marker._icon;\n\n\t\t// Don't do anything if this layer is a marker but doesn't have an icon. Markers\n\t\t// should usually have icons. If using Leaflet.draw with Leaflet.markercluster there\n\t\t// is a chance that a marker doesn't.\n\t\tif (!icon) {\n\t\t\treturn;\n\t\t}\n\n\t\t// This is quite naughty, but I don't see another way of doing it. (short of setting a new icon)\n\t\ticon.style.display = 'none';\n\n\t\tif (L.DomUtil.hasClass(icon, 'leaflet-edit-marker-selected')) {\n\t\t\tL.DomUtil.removeClass(icon, 'leaflet-edit-marker-selected');\n\t\t\t// Offset as the border will make the icon move.\n\t\t\tthis._offsetMarker(icon, -4);\n\n\t\t} else {\n\t\t\tL.DomUtil.addClass(icon, 'leaflet-edit-marker-selected');\n\t\t\t// Offset as the border will make the icon move.\n\t\t\tthis._offsetMarker(icon, 4);\n\t\t}\n\n\t\ticon.style.display = '';\n\t},\n\n\t_offsetMarker: function (icon, offset) {\n\t\tvar iconMarginTop = parseInt(icon.style.marginTop, 10) - offset,\n\t\t\ticonMarginLeft = parseInt(icon.style.marginLeft, 10) - offset;\n\n\t\ticon.style.marginTop = iconMarginTop + 'px';\n\t\ticon.style.marginLeft = iconMarginLeft + 'px';\n\t}\n});\n\nL.Marker.addInitHook(function () {\n\tif (L.Edit.Marker) {\n\t\tthis.editing = new L.Edit.Marker(this);\n\n\t\tif (this.options.editable) {\n\t\t\tthis.editing.enable();\n\t\t}\n\t}\n});\n"]}