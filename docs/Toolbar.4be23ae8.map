{"version":3,"sources":["resources/leaflet.draw/Toolbar.js"],"names":["L","Toolbar","Class","extend","initialize","options","setOptions","_modes","_actionButtons","_activeMode","version","split","parseInt","include","Evented","prototype","Mixin","Events","enabled","disable","handler","addToolbar","map","container","i","DomUtil","create","buttonIndex","buttonClassPrefix","_toolbarClass","modeHandlers","getModeHandlers","_toolbarContainer","_map","length","_initModeHandler","title","_lastButtonIndex","_actionsContainer","appendChild","removeToolbar","handlerId","hasOwnProperty","_disposeButton","button","enable","off","_handlerActivated","_handlerDeactivated","l","callback","classNamePredix","buttonTitle","type","_createButton","className","context","on","_detectIOS","iOS","test","navigator","userAgent","window","MSStream","link","sr","href","innerHTML","text","buttonEvent","DomEvent","stopPropagation","preventDefault","e","addClass","_showActionsToolbar","fire","_hideActionsToolbar","removeClass","_createActions","li","di","dl","buttons","getActions","firstChild","removeChild","push","lastButtonIndex","toolbarPosition","offsetTop","style","top","display","Draw","Event","TOOLBAROPENED","TOOLBARCLOSED"],"mappings":"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","file":"Toolbar.4be23ae8.map","sourceRoot":"..","sourcesContent":["/**\n * @class L.Draw.Toolbar\n * @aka Toolbar\n *\n * The toolbar class of the API â€” it is used to create the ui\n * This will be depreciated\n *\n * @example\n *\n * ```js\n *    var toolbar = L.Toolbar();\n *    toolbar.addToolbar(map);\n * ```\n *\n * ### Disabling a toolbar\n *\n * If you do not want a particular toolbar in your app you can turn it off by setting the toolbar to false.\n *\n * ```js\n *      var drawControl = new L.Control.Draw({\n *          draw: false,\n *          edit: {\n *              featureGroup: editableLayers\n *          }\n *      });\n * ```\n *\n * ### Disabling a toolbar item\n *\n * If you want to turn off a particular toolbar item, set it to false. The following disables drawing polygons and\n * markers. It also turns off the ability to edit layers.\n *\n * ```js\n *      var drawControl = new L.Control.Draw({\n *          draw: {\n *              polygon: false,\n *              marker: false\n *          },\n *          edit: {\n *              featureGroup: editableLayers,\n *              edit: false\n *          }\n *      });\n * ```\n */\nL.Toolbar = L.Class.extend({\n\t// @section Methods for modifying the toolbar\n\n\t// @method initialize(options): void\n\t// Toolbar constructor\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\n\t\tthis._modes = {};\n\t\tthis._actionButtons = [];\n\t\tthis._activeMode = null;\n\n\t\tvar version = L.version.split('.');\n\t\t//If Version is >= 1.2.0\n\t\tif (parseInt(version[0], 10) === 1 && parseInt(version[1], 10) >= 2) {\n\t\t\tL.Toolbar.include(L.Evented.prototype);\n\t\t} else {\n\t\t\tL.Toolbar.include(L.Mixin.Events);\n\t\t}\n\t},\n\n\t// @method enabled(): boolean\n\t// Gets a true/false of whether the toolbar is enabled\n\tenabled: function () {\n\t\treturn this._activeMode !== null;\n\t},\n\n\t// @method disable(): void\n\t// Disables the toolbar\n\tdisable: function () {\n\t\tif (!this.enabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._activeMode.handler.disable();\n\t},\n\n\t// @method addToolbar(map): L.DomUtil\n\t// Adds the toolbar to the map and returns the toolbar dom element\n\taddToolbar: function (map) {\n\t\tvar container = L.DomUtil.create('div', 'leaflet-draw-section'),\n\t\t\tbuttonIndex = 0,\n\t\t\tbuttonClassPrefix = this._toolbarClass || '',\n\t\t\tmodeHandlers = this.getModeHandlers(map),\n\t\t\ti;\n\n\t\tthis._toolbarContainer = L.DomUtil.create('div', 'leaflet-draw-toolbar leaflet-bar');\n\t\tthis._map = map;\n\n\t\tfor (i = 0; i < modeHandlers.length; i++) {\n\t\t\tif (modeHandlers[i].enabled) {\n\t\t\t\tthis._initModeHandler(\n\t\t\t\t\tmodeHandlers[i].handler,\n\t\t\t\t\tthis._toolbarContainer,\n\t\t\t\t\tbuttonIndex++,\n\t\t\t\t\tbuttonClassPrefix,\n\t\t\t\t\tmodeHandlers[i].title\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// if no buttons were added, do not add the toolbar\n\t\tif (!buttonIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Save button index of the last button, -1 as we would have ++ after the last button\n\t\tthis._lastButtonIndex = --buttonIndex;\n\n\t\t// Create empty actions part of the toolbar\n\t\tthis._actionsContainer = L.DomUtil.create('ul', 'leaflet-draw-actions');\n\n\t\t// Add draw and cancel containers to the control container\n\t\tcontainer.appendChild(this._toolbarContainer);\n\t\tcontainer.appendChild(this._actionsContainer);\n\n\t\treturn container;\n\t},\n\n\t// @method removeToolbar(): void\n\t// Removes the toolbar and drops the handler event listeners\n\tremoveToolbar: function () {\n\t\t// Dispose each handler\n\t\tfor (var handlerId in this._modes) {\n\t\t\tif (this._modes.hasOwnProperty(handlerId)) {\n\t\t\t\t// Unbind handler button\n\t\t\t\tthis._disposeButton(\n\t\t\t\t\tthis._modes[handlerId].button,\n\t\t\t\t\tthis._modes[handlerId].handler.enable,\n\t\t\t\t\tthis._modes[handlerId].handler\n\t\t\t\t);\n\n\t\t\t\t// Make sure is disabled\n\t\t\t\tthis._modes[handlerId].handler.disable();\n\n\t\t\t\t// Unbind handler\n\t\t\t\tthis._modes[handlerId].handler\n\t\t\t\t\t.off('enabled', this._handlerActivated, this)\n\t\t\t\t\t.off('disabled', this._handlerDeactivated, this);\n\t\t\t}\n\t\t}\n\t\tthis._modes = {};\n\n\t\t// Dispose the actions toolbar\n\t\tfor (var i = 0, l = this._actionButtons.length; i < l; i++) {\n\t\t\tthis._disposeButton(\n\t\t\t\tthis._actionButtons[i].button,\n\t\t\t\tthis._actionButtons[i].callback,\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t\tthis._actionButtons = [];\n\t\tthis._actionsContainer = null;\n\t},\n\n\t_initModeHandler: function (handler, container, buttonIndex, classNamePredix, buttonTitle) {\n\t\tvar type = handler.type;\n\n\t\tthis._modes[type] = {};\n\n\t\tthis._modes[type].handler = handler;\n\n\t\tthis._modes[type].button = this._createButton({\n\t\t\ttype: type,\n\t\t\ttitle: buttonTitle,\n\t\t\tclassName: classNamePredix + '-' + type,\n\t\t\tcontainer: container,\n\t\t\tcallback: this._modes[type].handler.enable,\n\t\t\tcontext: this._modes[type].handler\n\t\t});\n\n\t\tthis._modes[type].buttonIndex = buttonIndex;\n\n\t\tthis._modes[type].handler\n\t\t\t.on('enabled', this._handlerActivated, this)\n\t\t\t.on('disabled', this._handlerDeactivated, this);\n\t},\n\n\t/* Detect iOS based on browser User Agent, based on:\n\t * http://stackoverflow.com/a/9039885 */\n\t_detectIOS: function () {\n\t\tvar iOS = (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream);\n\t\treturn iOS;\n\t},\n\n\t_createButton: function (options) {\n\n\t\tvar link = L.DomUtil.create('a', options.className || '', options.container);\n\t\t// Screen reader tag\n\t\tvar sr = L.DomUtil.create('span', 'sr-only', options.container);\n\n\t\tlink.href = '#';\n\t\tlink.appendChild(sr);\n\n\t\tif (options.title) {\n\t\t\tlink.title = options.title;\n\t\t\tsr.innerHTML = options.title;\n\t\t}\n\n\t\tif (options.text) {\n\t\t\tlink.innerHTML = options.text;\n\t\t\tsr.innerHTML = options.text;\n\t\t}\n\n\t\t/* iOS does not use click events */\n\t\tvar buttonEvent = this._detectIOS() ? 'touchstart' : 'click';\n\n\t\tL.DomEvent\n\t\t\t.on(link, 'click', L.DomEvent.stopPropagation)\n\t\t\t.on(link, 'mousedown', L.DomEvent.stopPropagation)\n\t\t\t.on(link, 'dblclick', L.DomEvent.stopPropagation)\n\t\t\t.on(link, 'touchstart', L.DomEvent.stopPropagation)\n\t\t\t.on(link, 'click', L.DomEvent.preventDefault)\n\t\t\t.on(link, buttonEvent, options.callback, options.context);\n\n\t\treturn link;\n\t},\n\n\t_disposeButton: function (button, callback) {\n\t\t/* iOS does not use click events */\n\t\tvar buttonEvent = this._detectIOS() ? 'touchstart' : 'click';\n\n\t\tL.DomEvent\n\t\t\t.off(button, 'click', L.DomEvent.stopPropagation)\n\t\t\t.off(button, 'mousedown', L.DomEvent.stopPropagation)\n\t\t\t.off(button, 'dblclick', L.DomEvent.stopPropagation)\n\t\t\t.off(button, 'touchstart', L.DomEvent.stopPropagation)\n\t\t\t.off(button, 'click', L.DomEvent.preventDefault)\n\t\t\t.off(button, buttonEvent, callback);\n\t},\n\n\t_handlerActivated: function (e) {\n\t\t// Disable active mode (if present)\n\t\tthis.disable();\n\n\t\t// Cache new active feature\n\t\tthis._activeMode = this._modes[e.handler];\n\n\t\tL.DomUtil.addClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\n\n\t\tthis._showActionsToolbar();\n\n\t\tthis.fire('enable');\n\t},\n\n\t_handlerDeactivated: function () {\n\t\tthis._hideActionsToolbar();\n\n\t\tL.DomUtil.removeClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\n\n\t\tthis._activeMode = null;\n\n\t\tthis.fire('disable');\n\t},\n\n\t_createActions: function (handler) {\n\t\tvar container = this._actionsContainer,\n\t\t\tbuttons = this.getActions(handler),\n\t\t\tl = buttons.length,\n\t\t\tli, di, dl, button;\n\n\t\t// Dispose the actions toolbar (todo: dispose only not used buttons)\n\t\tfor (di = 0, dl = this._actionButtons.length; di < dl; di++) {\n\t\t\tthis._disposeButton(this._actionButtons[di].button, this._actionButtons[di].callback);\n\t\t}\n\t\tthis._actionButtons = [];\n\n\t\t// Remove all old buttons\n\t\twhile (container.firstChild) {\n\t\t\tcontainer.removeChild(container.firstChild);\n\t\t}\n\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif ('enabled' in buttons[i] && !buttons[i].enabled) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tli = L.DomUtil.create('li', '', container);\n\n\t\t\tbutton = this._createButton({\n\t\t\t\ttitle: buttons[i].title,\n\t\t\t\ttext: buttons[i].text,\n\t\t\t\tcontainer: li,\n\t\t\t\tcallback: buttons[i].callback,\n\t\t\t\tcontext: buttons[i].context\n\t\t\t});\n\n\t\t\tthis._actionButtons.push({\n\t\t\t\tbutton: button,\n\t\t\t\tcallback: buttons[i].callback\n\t\t\t});\n\t\t}\n\t},\n\n\t_showActionsToolbar: function () {\n\t\tvar buttonIndex = this._activeMode.buttonIndex,\n\t\t\tlastButtonIndex = this._lastButtonIndex,\n\t\t\ttoolbarPosition = this._activeMode.button.offsetTop - 1;\n\n\t\t// Recreate action buttons on every click\n\t\tthis._createActions(this._activeMode.handler);\n\n\t\t// Correctly position the cancel button\n\t\tthis._actionsContainer.style.top = toolbarPosition + 'px';\n\n\t\tif (buttonIndex === 0) {\n\t\t\tL.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\n\t\t\tL.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-top');\n\t\t}\n\n\t\tif (buttonIndex === lastButtonIndex) {\n\t\t\tL.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\n\t\t\tL.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\n\t\t}\n\n\t\tthis._actionsContainer.style.display = 'block';\n\t\tthis._map.fire(L.Draw.Event.TOOLBAROPENED);\n\t},\n\n\t_hideActionsToolbar: function () {\n\t\tthis._actionsContainer.style.display = 'none';\n\n\t\tL.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\n\t\tL.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\n\t\tL.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-top');\n\t\tL.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\n\t\tthis._map.fire(L.Draw.Event.TOOLBARCLOSED);\n\t}\n});\n"]}