{"version":3,"sources":["resources/leaflet.draw/Tooltip.js"],"names":["L","Draw","Tooltip","Class","extend","initialize","map","_map","_popupPane","_panes","popupPane","_visible","_container","options","drawControlTooltips","DomUtil","create","_singleLineLabel","on","_onMouseOut","dispose","off","removeChild","updateContent","labelText","subtext","length","removeClass","addClass","innerHTML","text","style","visibility","updatePosition","latlng","pos","latLngToLayerPoint","tooltipContainer","setPosition","showAsError","removeError"],"mappings":";AAAAA,EAAEC,KAAOD,EAAEC,MAAQ,GAenBD,EAAEC,KAAKC,QAAUF,EAAEG,MAAMC,OAAO,CAM/BC,WAAY,SAAUC,GAChBC,KAAAA,KAAOD,EACPE,KAAAA,WAAaF,EAAIG,OAAOC,UACxBC,KAAAA,UAAW,EAEXC,KAAAA,WAAaN,EAAIO,QAAQC,oBAC7Bd,EAAEe,QAAQC,OAAO,MAAO,uBAAwB,KAAKR,YAAc,KAC/DS,KAAAA,kBAAmB,EAEnBV,KAAAA,KAAKW,GAAG,WAAY,KAAKC,YAAa,OAK5CC,QAAS,WACHb,KAAAA,KAAKc,IAAI,WAAY,KAAKF,YAAa,MAExC,KAAKP,aACHJ,KAAAA,WAAWc,YAAY,KAAKV,YAC5BA,KAAAA,WAAa,OAMpBW,cAAe,SAAUC,GACpB,OAAC,KAAKZ,YAGVY,EAAUC,QAAUD,EAAUC,SAAW,GAGR,IAA7BD,EAAUC,QAAQC,QAAiB,KAAKT,iBAInCO,EAAUC,QAAQC,OAAS,GAAK,KAAKT,mBAC7CjB,EAAEe,QAAQY,YAAY,KAAKf,WAAY,+BAClCK,KAAAA,kBAAmB,IALxBjB,EAAEe,QAAQa,SAAS,KAAKhB,WAAY,+BAC/BK,KAAAA,kBAAmB,GAOpBL,KAAAA,WAAWiB,WACdL,EAAUC,QAAQC,OAAS,EAC3B,8CAAgDF,EAAUC,QAAU,gBAAuB,IAC5F,SAAWD,EAAUM,KAAO,UAExBN,EAAUM,MAASN,EAAUC,SAI5Bd,KAAAA,UAAW,EACXC,KAAAA,WAAWmB,MAAMC,WAAa,YAJ9BrB,KAAAA,UAAW,EACXC,KAAAA,WAAWmB,MAAMC,WAAa,UAM7B,MA3BC,MAgCTC,eAAgB,SAAUC,GACrBC,IAAAA,EAAM,KAAK5B,KAAK6B,mBAAmBF,GACtCG,EAAmB,KAAKzB,WASlB,OAPH,KAAKA,aACJ,KAAKD,WACR0B,EAAiBN,MAAMC,WAAa,WAErChC,EAAEe,QAAQuB,YAAYD,EAAkBF,IAGlC,MAKRI,YAAa,WAIL,OAHH,KAAK3B,YACRZ,EAAEe,QAAQa,SAAS,KAAKhB,WAAY,8BAE9B,MAKR4B,YAAa,WAIL,OAHH,KAAK5B,YACRZ,EAAEe,QAAQY,YAAY,KAAKf,WAAY,8BAEjC,MAGRO,YAAa,WACR,KAAKP,aACHA,KAAAA,WAAWmB,MAAMC,WAAa","file":"Tooltip.4195de62.map","sourceRoot":"..","sourcesContent":["L.Draw = L.Draw || {};\n/**\n * @class L.Draw.Tooltip\n * @aka Tooltip\n *\n * The tooltip class â€” it is used to display the tooltip while drawing\n * This will be depreciated\n *\n * @example\n *\n * ```js\n *    var tooltip = L.Draw.Tooltip();\n * ```\n *\n */\nL.Draw.Tooltip = L.Class.extend({\n\n\t// @section Methods for modifying draw state\n\n\t// @method initialize(map): void\n\t// Tooltip constructor\n\tinitialize: function (map) {\n\t\tthis._map = map;\n\t\tthis._popupPane = map._panes.popupPane;\n\t\tthis._visible = false;\n\n\t\tthis._container = map.options.drawControlTooltips ?\n\t\t\tL.DomUtil.create('div', 'leaflet-draw-tooltip', this._popupPane) : null;\n\t\tthis._singleLineLabel = false;\n\n\t\tthis._map.on('mouseout', this._onMouseOut, this);\n\t},\n\n\t// @method dispose(): void\n\t// Remove Tooltip DOM and unbind events\n\tdispose: function () {\n\t\tthis._map.off('mouseout', this._onMouseOut, this);\n\n\t\tif (this._container) {\n\t\t\tthis._popupPane.removeChild(this._container);\n\t\t\tthis._container = null;\n\t\t}\n\t},\n\n\t// @method updateContent(labelText): this\n\t// Changes the tooltip text to string in function call\n\tupdateContent: function (labelText) {\n\t\tif (!this._container) {\n\t\t\treturn this;\n\t\t}\n\t\tlabelText.subtext = labelText.subtext || '';\n\n\t\t// update the vertical position (only if changed)\n\t\tif (labelText.subtext.length === 0 && !this._singleLineLabel) {\n\t\t\tL.DomUtil.addClass(this._container, 'leaflet-draw-tooltip-single');\n\t\t\tthis._singleLineLabel = true;\n\t\t}\n\t\telse if (labelText.subtext.length > 0 && this._singleLineLabel) {\n\t\t\tL.DomUtil.removeClass(this._container, 'leaflet-draw-tooltip-single');\n\t\t\tthis._singleLineLabel = false;\n\t\t}\n\n\t\tthis._container.innerHTML =\n\t\t\t(labelText.subtext.length > 0 ?\n\t\t\t\t'<span class=\"leaflet-draw-tooltip-subtext\">' + labelText.subtext + '</span>' + '<br />' : '') +\n\t\t\t'<span>' + labelText.text + '</span>';\n\n\t\tif (!labelText.text && !labelText.subtext) {\n\t\t\tthis._visible = false;\n\t\t\tthis._container.style.visibility = 'hidden';\n\t\t} else {\n\t\t\tthis._visible = true;\n\t\t\tthis._container.style.visibility = 'inherit';\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t// @method updatePosition(latlng): this\n\t// Changes the location of the tooltip\n\tupdatePosition: function (latlng) {\n\t\tvar pos = this._map.latLngToLayerPoint(latlng),\n\t\t\ttooltipContainer = this._container;\n\n\t\tif (this._container) {\n\t\t\tif (this._visible) {\n\t\t\t\ttooltipContainer.style.visibility = 'inherit';\n\t\t\t}\n\t\t\tL.DomUtil.setPosition(tooltipContainer, pos);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t// @method showAsError(): this\n\t// Applies error class to tooltip\n\tshowAsError: function () {\n\t\tif (this._container) {\n\t\t\tL.DomUtil.addClass(this._container, 'leaflet-error-draw-tooltip');\n\t\t}\n\t\treturn this;\n\t},\n\n\t// @method removeError(): this\n\t// Removes the error class from the tooltip\n\tremoveError: function () {\n\t\tif (this._container) {\n\t\t\tL.DomUtil.removeClass(this._container, 'leaflet-error-draw-tooltip');\n\t\t}\n\t\treturn this;\n\t},\n\n\t_onMouseOut: function () {\n\t\tif (this._container) {\n\t\t\tthis._container.style.visibility = 'hidden';\n\t\t}\n\t}\n});\n"]}