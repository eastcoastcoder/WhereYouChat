{"version":3,"sources":["resources/leaflet.draw/draw/handler/Draw.CircleMarker.js"],"names":["L","Draw","CircleMarker","Marker","extend","statics","TYPE","options","stroke","color","weight","opacity","fill","fillColor","fillOpacity","clickable","zIndexOffset","initialize","map","type","_initialLabelText","drawLocal","draw","handlers","circlemarker","tooltip","start","Feature","prototype","call","_fireCreatedEvent","circleMarker","_marker","getLatLng","_createMarker","latlng"],"mappings":";AAKAA,EAAEC,KAAKC,aAAeF,EAAEC,KAAKE,OAAOC,OAAO,CAC1CC,QAAS,CACRC,KAAM,gBAGPC,QAAS,CACRC,QAAQ,EACRC,MAAO,UACPC,OAAQ,EACRC,QAAS,GACTC,MAAM,EACNC,UAAW,KACXC,YAAa,GACbC,WAAW,EACXC,aAAc,KAIfC,WAAY,SAAUC,EAAKX,GAErBY,KAAAA,KAAOnB,EAAEC,KAAKC,aAAaI,KAE3Bc,KAAAA,kBAAoBpB,EAAEqB,UAAUC,KAAKC,SAASC,aAAaC,QAAQC,MAExE1B,EAAEC,KAAK0B,QAAQC,UAAUX,WAAWY,KAAK,KAAMX,EAAKX,IAIrDuB,kBAAmB,WACdC,IAAAA,EAAe,IAAI/B,EAAEE,aAAa,KAAK8B,QAAQC,YAAa,KAAK1B,SACrEP,EAAEC,KAAK0B,QAAQC,UAAUE,kBAAkBD,KAAK,KAAME,IAGvDG,cAAe,SAAUC,GACjB,OAAA,IAAInC,EAAEE,aAAaiC,EAAQ,KAAK5B","file":"Draw.CircleMarker.679a72a4.map","sourceRoot":"..","sourcesContent":["/**\n * @class L.Draw.CircleMarker\n * @aka Draw.CircleMarker\n * @inherits L.Draw.Marker\n */\nL.Draw.CircleMarker = L.Draw.Marker.extend({\n\tstatics: {\n\t\tTYPE: 'circlemarker'\n\t},\n\n\toptions: {\n\t\tstroke: true,\n\t\tcolor: '#3388ff',\n\t\tweight: 4,\n\t\topacity: 0.5,\n\t\tfill: true,\n\t\tfillColor: null, //same as color by default\n\t\tfillOpacity: 0.2,\n\t\tclickable: true,\n\t\tzIndexOffset: 2000 // This should be > than the highest z-index any markers\n\t},\n\n\t// @method initialize(): void\n\tinitialize: function (map, options) {\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\n\t\tthis.type = L.Draw.CircleMarker.TYPE;\n\n\t\tthis._initialLabelText = L.drawLocal.draw.handlers.circlemarker.tooltip.start;\n\n\t\tL.Draw.Feature.prototype.initialize.call(this, map, options);\n\t},\n\n\n\t_fireCreatedEvent: function () {\n\t\tvar circleMarker = new L.CircleMarker(this._marker.getLatLng(), this.options);\n\t\tL.Draw.Feature.prototype._fireCreatedEvent.call(this, circleMarker);\n\t},\n\n\t_createMarker: function (latlng) {\n\t\treturn new L.CircleMarker(latlng, this.options);\n\t}\n});\n"]}